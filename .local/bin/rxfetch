#!/usr/bin/env bash

LIBRARYS=(
 cursor colors
)

LIBRARY_PATH="${HOME}/.scripts/library"

for LIBRARY in ${LIBRARYS[@]}; do
  source ${LIBRARY_PATH}/${LIBRARY}.sh
done

function getInit() {
    os="$(uname -o)"
    if [[ "$os" = "Android" ]]; then
       echo "init.rc"
    elif [[ ! $(pidof systemd) ]]; then
        if [[ -f "/sbin/openrc" ]]; then
            echo "openrc"
        else
         echo $(cat /proc/1/comm)
        fi
    else
        echo "systemD"
    fi
}

function netPkg() {

  pack="$(which {apt,dpkg} 2>/dev/null | grep -v "not found" | awk -F/ 'NR==1{print $NF}')"

  case "${pack}" in

    "apt")
	    total=$(apt list --installed 2>/dev/null | wc -l)
	  ;;

    "dpkg")
	    total=$(dpkg-query -l | wc -l)
	  ;;

    "")
	    total="Unknown"
	  ;;

  esac

  echo $total
  
}

function distroDetect() {

    os="$(uname -o)"
    case "${os}" in

      Android )
        distro="Android"
      ;;

	    *)
	      distro="$(source /etc/os-release && echo "${PRETTY_NAME}")"
        if [ ! -d $HOME/.local/share/fonts ]; then
          mkdir -p $HOME/.local/share/fonts
        fi
        if [ ! -f $HOME/.local/share/fonts/Material.ttf ] && [ ! -f /usr/share/fonts/Material.ttf ]; then
          cp -r ttf-material-design-icons/* $HOME/.local/share/fonts
          fc-cache -vf &>/dev/null
        fi
	    ;;

    esac

}

function getMemoryUsage() {
  free --mega | sed -n -E '2s/^[^0-9]*([0-9]+) *([0-9]+).*/'"${space}"'\2 \/ \1 MB/p'
}

function getUser() {

  user=$(whoami)

}

function getNodeName() {

  node_name=$(uname -n)

}

distroDetect
getUser
getNodeName

function penguin() {

  echo -e "

\n               ${COLOR_DEFAULT}xshin${COLOR_LIGHT_RED}@${COLOR_DEFAULT}android ${COLOR_LIGHT_RED}${COLOR_DEFAULT}\n"
  echo -e "               ${COLOR_LIGHT_GREEN}${COLOR_DEFAULT} : ${distro} $(uname -m)"
  echo -e "               ${COLOR_LIGHT_RED}${COLOR_DEFAULT} : $(uname -r)"
  echo -e "               ${COLOR_BOLD_YELLOW}${COLOR_DEFAULT} : $(netPkg) Packages"
  echo -e "     ${COLOR_DEFAULT}•${COLOR_BACKGROUND_BLACK}_${COLOR_DEFAULT}•${COLOR_RESET}       ${COLOR_LIGHT_RED}${COLOR_DEFAULT} : $(basename "${SHELL}")"
  echo -e "     ${COLOR_BACKGROUND_BLACK}${COLOR_RESET}${COLOR_BACKGROUND_YELLOW}oo${COLOR_RESET}${COLOR_BACKGROUND_BLACK}|${COLOR_RESET}       ${COLOR_BOLD_YELLOW}${COLOR_DEFAULT} : $(getMemoryUsage)"
  echo -e "    ${COLOR_BACKGROUND_BLACK}/${COLOR_RESET}${COLOR_BACKGROUND_WHITE} ${COLOR_RESET}${COLOR_BACKGROUND_BLACK}'\'${COLOR_RESET}      ${COLOR_BOLD_CYAN}${COLOR_DEFAULT} :$(uptime -p | sed 's/up//')"
  echo -e "   ${COLOR_BACKGROUND_YELLOW}(${COLOR_RESET}${COLOR_BACKGROUND_BLACK}\_;/${COLOR_RESET}${COLOR_BACKGROUND_YELLOW})${COLOR_RESET}      ${COLOR_BOLD_MAGENTA}${COLOR_DEFAULT} : $(bash $HOME/.scripts/system/fetch.sh music)"
  echo -e "               $(bash $HOME/.scripts/system/fetch.sh storage -n)"
  echo -e "               $(bash $HOME/.scripts/system/fetch.sh battery)"
  echo -e "               
               ${COLOR_BLACK}  ${COLOR_BOLD_RED}  ${COLOR_GREEN}  ${COLOR_BOLD_YELLOW}  ${COLOR_BOLD_BLUE}  ${COLOR_BOLD_MAGENTA}  ${COLOR_BOLD_CYAN}  ${COLOR_BOLD_WHITE}  ${COLOR_DEFAULT}\n
                
                "

}

function hydra() {

  echo -e "
  
  
  ${COLOR_LIGHT_RED}
  ${COLOR_BOLD_RED}⣴⣶⣤⡤⠦⣤⣀⣤⠆${COLOR_DEFAULT}     ${COLOR_GREEN}⣈⣭⣿⣶⣿⣦⣼⣆           ${COLOR_DEFAULT}xshin${COLOR_LIGHT_RED}@${COLOR_DEFAULT}android ${COLOR_LIGHT_RED}${COLOR_DEFAULT}
   ${COLOR_BOLD_RED}⠉⠻⢿⣿⠿⣿⣿⣶⣦⠤⠄${COLOR_DEFAULT}${COLOR_GREEN}⡠⢾⣿⣿⡿⠋⠉⠉⠻⣿⣿⡛⣦       
         ${COLOR_BOLD_RED}⠈⢿⣿⣟⠦${COLOR_DEFAULT} ${COLOR_GREEN}⣾⣿⣿⣷    ⠻⠿⢿⣿⣧⣄      ${COLOR_GREEN} ${COLOR_DEFAULT}: ${distro} $(uname -m)
          ${COLOR_BOLD_RED}⣸⣿⣿⢧${COLOR_DEFAULT} ${COLOR_GREEN}⢻⠻⣿⣿⣷⣄⣀⠄${COLOR_BOLD_WHITE}⠢⣀${COLOR_GREEN}⠈⠙⠿⠄      ${COLOR_BOLD_YELLOW} ${COLOR_DEFAULT}: $(uname -r)
  ${COLOR_BOLD_YELLOW}     ${COLOR_DEFAULT}  ${COLOR_BOLD_RED}⢠⣿⣿⣿⠈${COLOR_DEFAULT}    ${COLOR_GREEN}⣻⣿⣿⣿⣿${COLOR_BOLD_WHITE}⣿⣿⣿⣛⣳⣤⣀⣀    ${COLOR_BOLD_RED} ${COLOR_DEFAULT}: $(netPkg) Packages
  ${COLOR_BOLD_YELLOW}⢠⣧⣶⣥⡤⢄${COLOR_DEFAULT} ${COLOR_BOLD_RED}⣸⣿⣿⠘${COLOR_DEFAULT}  ${COLOR_BOLD_WHITE}⢀⣴⣿⣿⡿⠛${COLOR_GREEN}⣿⣿⣧⠈${COLOR_BOLD_WHITE}⢿⠿⠟⠛⠻⠿⠄   ${COLOR_BOLD_WHITE} ${COLOR_DEFAULT}: $(basename "${SHELL}")
 ${COLOR_BOLD_YELLOW}⣰⣿⣿⠛⠻⣿⣿⡦${COLOR_DEFAULT}${COLOR_BOLD_RED}⢹⣿⣷${COLOR_DEFAULT}   ${COLOR_BOLD_WHITE}⢊⣿⣿⡏  ${COLOR_GREEN}⢸⣿⣿⡇${COLOR_BOLD_BLUE} ⢀⣠⣄⣾⠄    ${COLOR_BOLD_YELLOW} ${COLOR_DEFAULT}: $(getMemoryUsage)
 ${COLOR_BOLD_YELLOW}⣠⣿⠿⠛ ⢀⣿⣿⣷${COLOR_DEFAULT}${COLOR_BOLD_RED}⠘⢿⣿⣦⡀${COLOR_DEFAULT} ${COLOR_BOLD_WHITE}⢸⢿⣿⣿⣄ ${COLOR_GREEN}⣸⣿⣿⡇${COLOR_BOLD_BLUE}⣪⣿⡿⠿⣿⣷⡄  ${COLOR_BOLD_RED} ${COLOR_DEFAULT}:$(uptime -p | sed 's/up//')
${COLOR_BOLD_YELLOW}⠙⠃   ⣼⣿⡟${COLOR_DEFAULT}  ${COLOR_BOLD_RED}⠈⠻⣿⣿⣦${COLOR_BOLD_WHITE}⣌⡇⠻⣿⣿⣷${COLOR_GREEN}⣿⣿⣿ ${COLOR_BOLD_BLUE}⣿⣿⡇ ⠛⠻⢷⣄  ${prurple} ${COLOR_DEFAULT}: $(bash $HOME/.scripts/system/fetch.sh music)
   ${COLOR_BOLD_YELLOW}⢻⣿⣿⣄${COLOR_DEFAULT}   ${COLOR_BOLD_RED}⠈⠻⣿⣿⣿⣷${COLOR_BOLD_WHITE}⣿⣿⣿${COLOR_GREEN}⣿⣿⡟ ${COLOR_BOLD_BLUE}⠫⢿⣿⡆        $(bash $HOME/.scripts/system/fetch.sh storage -n)
   ${COLOR_BOLD_YELLOW}⠻⣿⣿⣿⣿⣶⣶${COLOR_DEFAULT}${COLOR_BOLD_RED}⣾⣿⣿⣿⣿${COLOR_BOLD_WHITE}⣿⣿${COLOR_GREEN}⣿⣿⡟${COLOR_BOLD_BLUE}⢀⣀⣤⣾⡿⠃         $(bash $HOME/.scripts/system/fetch.sh battery)  

                                   ${COLOR_BLACK}  ${COLOR_BOLD_RED}  ${COLOR_GREEN}  ${COLOR_BOLD_YELLOW}  ${COLOR_BOLD_BLUE}  ${COLOR_BOLD_MAGENTA}  ${COLOR_BOLD_CYAN} ${COLOR_BOLD_WHITE}  ${COLOR_DEFAULT}
  
  
  "

}

function help() {

  # Usage Help
  echo -e "Usage:
  rxfetch [option]
  "
  
  # Option Help
  echo -e "Options:
  ''        Run fetch script default (Logo Penguin)
  penguin   Run fetch script with Logo Penguin
  hydra     Run fetch script with Logo Hydra
  help      Print help message
  "  

}

case $1 in

  "" )
    setCursor off
    penguin
    setCursor on
  ;;

  penguin )
    setCursor off
    penguin
    setCursor on
  ;;

  hydra )
    setCursor off
    hydra
    setCursor on
  ;;

  * )
    help
    exit 1
  ;;

esac
